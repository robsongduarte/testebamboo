{"version":3,"sources":["webpack:///./node_modules/ngx-currency/index.js","webpack:///./node_modules/ngx-currency/src/currency-mask.config.js","webpack:///./node_modules/ngx-currency/src/currency-mask.directive.js","webpack:///./node_modules/ngx-currency/src/currency-mask.module.js","webpack:///./node_modules/ngx-currency/src/input.handler.js","webpack:///./node_modules/ngx-currency/src/input.manager.js","webpack:///./node_modules/ngx-currency/src/input.service.js","webpack:///./node_modules/ngx-filter-pipe/esm5/ngx-filter-pipe.js","webpack:///./node_modules/ngx-tabset/esm5/ngx-tabset.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACH;AAC3C,iC;;;;;;;;;;;;ACFA;AAAA;AAAA;AAA+C;AACxC,+BAA+B,4DAAc;AACpD,gD;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0H;AACvE;AACW;AACf;AACxC;AACP,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU,cAAc,8BAA8B,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA,gCAAgC,2DAAY,gDAAgD;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACgC;AACjC;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA,oDAAoD;AACpD,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,0EAAoB,IAAI,IAAI;AAC3G,KAAK,OAAO,wDAAU,GAAG;AACzB,KAAK,OAAO,6DAAe,GAAG;AAC9B,EAAE;AACF;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,oBAAoB,OAAO,0DAAY,+BAA+B;AACtE,mBAAmB,OAAO,0DAAY,8BAA8B;AACpE,qBAAqB,OAAO,0DAAY,gCAAgC;AACxE,uBAAuB,OAAO,0DAAY,kCAAkC;AAC5E,wBAAwB,OAAO,0DAAY,mCAAmC;AAC9E,qBAAqB,OAAO,0DAAY,gCAAgC;AACxE;AACA,mD;;;;;;;;;;;;AC9GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACF;AACqB;AACJ;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0EAAoB;AACjD;AACA,iBAAiB;AACjB;AACA;AACA;AACA,CAAC;AAC4B;AAC7B;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,0DAAW;AACnD,+BAA+B,8EAAqB;AACpD,0BAA0B,8EAAqB;AAC/C,aAAa,IAAI;AACjB;AACA;AACA,gDAAgD,WAAW;AAC3D,gD;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAA+C;AAC/C;AACA;AACA,gCAAguB;AACxB,yC;;;;;;;;;;;;AC9HA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACuB;AACxB,yC;;;;;;;;;;;;ACpGA;AAAA;AAAA;AAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA,gCAAgC,2DAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACuB;AACxB,yC;;;;;;;;;;;;AClLA;AAAA;AAAA;AAAA;AAA2D;AAC3D;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,iCAAiC,uFAAuF;AACxH;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,kCAAkC;AACnE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE,oCAAoC,wCAAwC;AACzG,2BAA2B,EAAE,oCAAoC,2CAA2C;AAC5G,2BAA2B,EAAE;AAC7B,gCAAgC,EAAE,UAAU,YAAY;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,gDAAgD;AACjF;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,kDAAI;AAChB;AACA;AACA,aAAa,IAAI;AACjB,KAAK,OAAO,wDAAU,EAAE;AACxB;AACA;AACA,yCAAyC,WAAW;AACpD;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACwC;AACxC;;;;;;;;;;;;;ACjMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAE6H;AAC9E;;AAE/C;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,sBAAsB,OAAO,0DAAY,SAAS,yDAAW,IAAI;AACjE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE,kDAAkD,mBAAmB,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,2BAA2B,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,sWAAsW,gBAAgB;AACtX,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,kBAAkB,OAAO,6DAAe,yBAAyB;AACjE,0BAA0B,OAAO,mDAAK,EAAE;AACxC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,sBAAsB,OAAO,oDAAM,EAAE;AACrC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAAY;AAC1C,iBAAiB,IAAI;AACrB;AACA;AACA,6CAA6C,WAAW;AACxD;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;;AAEqD;AACrD","file":"default~estrutura-empresas-incluirEmpresas-empresas-incluir-module~estrutura-niveis-incluirNiveis-ni~0af3aa49.js","sourcesContent":["export * from \"./src/currency-mask.directive\";\nexport * from \"./src/currency-mask.module\";\n//# sourceMappingURL=index.js.map","import { InjectionToken } from \"@angular/core\";\nexport var CURRENCY_MASK_CONFIG = new InjectionToken(\"currency.mask.config\");\n//# sourceMappingURL=currency-mask.config.js.map","import { Directive, ElementRef, forwardRef, HostListener, Inject, KeyValueDiffers, Input, Optional } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { CURRENCY_MASK_CONFIG } from \"./currency-mask.config\";\nimport { InputHandler } from \"./input.handler\";\nexport var CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return CurrencyMaskDirective; }),\n    multi: true,\n};\nvar CurrencyMaskDirective = (function () {\n    function CurrencyMaskDirective(currencyMaskConfig, elementRef, keyValueDiffers) {\n        this.currencyMaskConfig = currencyMaskConfig;\n        this.elementRef = elementRef;\n        this.keyValueDiffers = keyValueDiffers;\n        this.options = {};\n        this.optionsTemplate = {\n            align: \"right\",\n            allowNegative: true,\n            allowZero: true,\n            decimal: \".\",\n            precision: 2,\n            prefix: \"$ \",\n            suffix: \"\",\n            thousands: \",\",\n            nullable: false\n        };\n        if (currencyMaskConfig) {\n            this.optionsTemplate = currencyMaskConfig;\n        }\n        this.keyValueDiffer = keyValueDiffers.find({}).create();\n    }\n    CurrencyMaskDirective.prototype.ngAfterViewInit = function () {\n        this.elementRef.nativeElement.style.textAlign = this.options ? this.options.align : this.optionsTemplate.align;\n    };\n    CurrencyMaskDirective.prototype.ngDoCheck = function () {\n        if (this.keyValueDiffer.diff(this.options)) {\n            this.elementRef.nativeElement.style.textAlign = this.options.align ? this.options.align : this.optionsTemplate.align;\n            this.inputHandler.updateOptions(Object.assign({}, this.optionsTemplate, this.options));\n        }\n    };\n    CurrencyMaskDirective.prototype.ngOnInit = function () {\n        this.inputHandler = new InputHandler(this.elementRef.nativeElement, Object.assign({}, this.optionsTemplate, this.options));\n    };\n    CurrencyMaskDirective.prototype.handleBlur = function (event) {\n        this.inputHandler.getOnModelTouched().apply(event);\n    };\n    CurrencyMaskDirective.prototype.handleCut = function (event) {\n        if (!this.isChromeAndroid()) {\n            this.inputHandler.handleCut(event);\n        }\n    };\n    CurrencyMaskDirective.prototype.handleInput = function (event) {\n        if (this.isChromeAndroid()) {\n            this.inputHandler.handleInput(event);\n        }\n    };\n    CurrencyMaskDirective.prototype.handleKeydown = function (event) {\n        if (!this.isChromeAndroid()) {\n            this.inputHandler.handleKeydown(event);\n        }\n    };\n    CurrencyMaskDirective.prototype.handleKeypress = function (event) {\n        if (!this.isChromeAndroid()) {\n            this.inputHandler.handleKeypress(event);\n        }\n    };\n    CurrencyMaskDirective.prototype.handlePaste = function (event) {\n        if (!this.isChromeAndroid()) {\n            this.inputHandler.handlePaste(event);\n        }\n    };\n    CurrencyMaskDirective.prototype.isChromeAndroid = function () {\n        return /chrome/i.test(navigator.userAgent) && /android/i.test(navigator.userAgent);\n    };\n    CurrencyMaskDirective.prototype.registerOnChange = function (callbackFunction) {\n        this.inputHandler.setOnModelChange(callbackFunction);\n    };\n    CurrencyMaskDirective.prototype.registerOnTouched = function (callbackFunction) {\n        this.inputHandler.setOnModelTouched(callbackFunction);\n    };\n    CurrencyMaskDirective.prototype.setDisabledState = function (value) {\n        this.elementRef.nativeElement.disabled = value;\n    };\n    CurrencyMaskDirective.prototype.writeValue = function (value) {\n        this.inputHandler.setValue(value);\n    };\n    return CurrencyMaskDirective;\n}());\nexport { CurrencyMaskDirective };\nCurrencyMaskDirective.decorators = [\n    { type: Directive, args: [{\n                selector: \"[currencyMask]\",\n                providers: [CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR]\n            },] },\n];\n/** @nocollapse */\nCurrencyMaskDirective.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CURRENCY_MASK_CONFIG,] },] },\n    { type: ElementRef, },\n    { type: KeyValueDiffers, },\n]; };\nCurrencyMaskDirective.propDecorators = {\n    'options': [{ type: Input },],\n    'handleBlur': [{ type: HostListener, args: [\"blur\", [\"$event\"],] },],\n    'handleCut': [{ type: HostListener, args: [\"cut\", [\"$event\"],] },],\n    'handleInput': [{ type: HostListener, args: [\"input\", [\"$event\"],] },],\n    'handleKeydown': [{ type: HostListener, args: [\"keydown\", [\"$event\"],] },],\n    'handleKeypress': [{ type: HostListener, args: [\"keypress\", [\"$event\"],] },],\n    'handlePaste': [{ type: HostListener, args: [\"paste\", [\"$event\"],] },],\n};\n//# sourceMappingURL=currency-mask.directive.js.map","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CurrencyMaskDirective } from \"./currency-mask.directive\";\nimport { CURRENCY_MASK_CONFIG } from \"./currency-mask.config\";\nvar NgxCurrencyModule = (function () {\n    function NgxCurrencyModule() {\n    }\n    NgxCurrencyModule.forRoot = function (config) {\n        return {\n            ngModule: NgxCurrencyModule,\n            providers: [{\n                    provide: CURRENCY_MASK_CONFIG,\n                    useValue: config,\n                }]\n        };\n    };\n    return NgxCurrencyModule;\n}());\nexport { NgxCurrencyModule };\nNgxCurrencyModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, FormsModule],\n                declarations: [CurrencyMaskDirective],\n                exports: [CurrencyMaskDirective]\n            },] },\n];\n/** @nocollapse */\nNgxCurrencyModule.ctorParameters = function () { return []; };\n//# sourceMappingURL=currency-mask.module.js.map","import { InputService } from \"./input.service\";\nvar InputHandler = (function () {\n    function InputHandler(htmlInputElement, options) {\n        this.inputService = new InputService(htmlInputElement, options);\n    }\n    InputHandler.prototype.handleCut = function (event) {\n        var _this = this;\n        setTimeout(function () {\n            _this.inputService.updateFieldValue();\n            _this.setValue(_this.inputService.value);\n            _this.onModelChange(_this.inputService.value);\n        }, 0);\n    };\n    InputHandler.prototype.handleInput = function (event) {\n        var keyCode = this.inputService.rawValue.charCodeAt(this.inputService.rawValue.length - 1);\n        var rawValueLength = this.inputService.rawValue.length;\n        var rawValueSelectionEnd = this.inputService.inputSelection.selectionEnd;\n        var storedRawValueLength = this.inputService.storedRawValue.length;\n        this.inputService.rawValue = this.inputService.storedRawValue;\n        if (rawValueLength != rawValueSelectionEnd || Math.abs(rawValueLength - storedRawValueLength) != 1) {\n            this.setCursorPosition(event);\n            return;\n        }\n        if (rawValueLength < storedRawValueLength) {\n            this.inputService.removeNumber(8);\n        }\n        if (rawValueLength > storedRawValueLength) {\n            switch (keyCode) {\n                case 43:\n                    this.inputService.changeToPositive();\n                    break;\n                case 45:\n                    this.inputService.changeToNegative();\n                    break;\n                default:\n                    if (!this.inputService.canInputMoreNumbers) {\n                        return;\n                    }\n                    this.inputService.addNumber(keyCode);\n            }\n        }\n        this.setCursorPosition(event);\n        this.onModelChange(this.inputService.value);\n    };\n    InputHandler.prototype.handleKeydown = function (event) {\n        var keyCode = event.which || event.charCode || event.keyCode;\n        if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {\n            event.preventDefault();\n            var selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\n            if (selectionRangeLength == 0) {\n                this.inputService.removeNumber(keyCode);\n                this.onModelChange(this.inputService.value);\n            }\n            if (selectionRangeLength >= (this.inputService.rawValue.length - this.inputService.prefixLength())) {\n                this.clearValue();\n            }\n        }\n    };\n    InputHandler.prototype.clearValue = function () {\n        this.setValue(this.inputService.isNullable() ? null : 0);\n        this.onModelChange(this.inputService.value);\n    };\n    InputHandler.prototype.handleKeypress = function (event) {\n        var keyCode = event.which || event.charCode || event.keyCode;\n        if (keyCode === 97 && event.ctrlKey) {\n            return;\n        }\n        switch (keyCode) {\n            case undefined:\n            case 9:\n            case 13:\n            case 37:\n            case 39:\n                return;\n            case 43:\n                this.inputService.changeToPositive();\n                break;\n            case 45:\n                this.inputService.changeToNegative();\n                break;\n            default:\n                if (this.inputService.canInputMoreNumbers) {\n                    var selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\n                    if (selectionRangeLength == this.inputService.rawValue.length) {\n                        this.setValue(0);\n                    }\n                    this.inputService.addNumber(keyCode);\n                }\n        }\n        event.preventDefault();\n        this.onModelChange(this.inputService.value);\n    };\n    InputHandler.prototype.handlePaste = function (event) {\n        var _this = this;\n        setTimeout(function () {\n            _this.inputService.updateFieldValue();\n            _this.setValue(_this.inputService.value);\n            _this.onModelChange(_this.inputService.value);\n        }, 1);\n    };\n    InputHandler.prototype.updateOptions = function (options) {\n        this.inputService.updateOptions(options);\n    };\n    InputHandler.prototype.getOnModelChange = function () {\n        return this.onModelChange;\n    };\n    InputHandler.prototype.setOnModelChange = function (callbackFunction) {\n        this.onModelChange = callbackFunction;\n    };\n    InputHandler.prototype.getOnModelTouched = function () {\n        return this.onModelTouched;\n    };\n    InputHandler.prototype.setOnModelTouched = function (callbackFunction) {\n        this.onModelTouched = callbackFunction;\n    };\n    InputHandler.prototype.setValue = function (value) {\n        this.inputService.value = value;\n    };\n    InputHandler.prototype.setCursorPosition = function (event) {\n        setTimeout(function () {\n            event.target.setSelectionRange(event.target.value.length, event.target.value.length);\n        }, 0);\n    };\n    return InputHandler;\n}());\nexport { InputHandler };\n//# sourceMappingURL=input.handler.js.map","var InputManager = (function () {\n    function InputManager(htmlInputElement) {\n        this.htmlInputElement = htmlInputElement;\n    }\n    InputManager.prototype.setCursorAt = function (position) {\n        if (this.htmlInputElement.setSelectionRange) {\n            this.htmlInputElement.focus();\n            this.htmlInputElement.setSelectionRange(position, position);\n        }\n        else if (this.htmlInputElement.createTextRange) {\n            var textRange = this.htmlInputElement.createTextRange();\n            textRange.collapse(true);\n            textRange.moveEnd(\"character\", position);\n            textRange.moveStart(\"character\", position);\n            textRange.select();\n        }\n    };\n    InputManager.prototype.updateValueAndCursor = function (newRawValue, oldLength, selectionStart) {\n        this.rawValue = newRawValue;\n        var newLength = newRawValue.length;\n        selectionStart = selectionStart - (oldLength - newLength);\n        this.setCursorAt(selectionStart);\n    };\n    Object.defineProperty(InputManager.prototype, \"canInputMoreNumbers\", {\n        get: function () {\n            var haventReachedMaxLength = !(this.rawValue.length >= this.htmlInputElement.maxLength && this.htmlInputElement.maxLength >= 0);\n            var selectionStart = this.inputSelection.selectionStart;\n            var selectionEnd = this.inputSelection.selectionEnd;\n            var haveNumberSelected = !!(selectionStart != selectionEnd &&\n                this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/));\n            var startWithZero = (this.htmlInputElement.value.substring(0, 1) == \"0\");\n            return haventReachedMaxLength || haveNumberSelected || startWithZero;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InputManager.prototype, \"inputSelection\", {\n        get: function () {\n            var selectionStart = 0;\n            var selectionEnd = 0;\n            if (typeof this.htmlInputElement.selectionStart == \"number\" && typeof this.htmlInputElement.selectionEnd == \"number\") {\n                selectionStart = this.htmlInputElement.selectionStart;\n                selectionEnd = this.htmlInputElement.selectionEnd;\n            }\n            else {\n                var range = document.selection.createRange();\n                if (range && range.parentElement() == this.htmlInputElement) {\n                    var lenght = this.htmlInputElement.value.length;\n                    var normalizedValue = this.htmlInputElement.value.replace(/\\r\\n/g, \"\\n\");\n                    var startRange = this.htmlInputElement.createTextRange();\n                    startRange.moveToBookmark(range.getBookmark());\n                    var endRange = this.htmlInputElement.createTextRange();\n                    endRange.collapse(false);\n                    if (startRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\n                        selectionStart = selectionEnd = lenght;\n                    }\n                    else {\n                        selectionStart = -startRange.moveStart(\"character\", -lenght);\n                        selectionStart += normalizedValue.slice(0, selectionStart).split(\"\\n\").length - 1;\n                        if (startRange.compareEndPoints(\"EndToEnd\", endRange) > -1) {\n                            selectionEnd = lenght;\n                        }\n                        else {\n                            selectionEnd = -startRange.moveEnd(\"character\", -lenght);\n                            selectionEnd += normalizedValue.slice(0, selectionEnd).split(\"\\n\").length - 1;\n                        }\n                    }\n                }\n            }\n            return {\n                selectionStart: selectionStart,\n                selectionEnd: selectionEnd\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InputManager.prototype, \"rawValue\", {\n        get: function () {\n            return this.htmlInputElement && this.htmlInputElement.value;\n        },\n        set: function (value) {\n            this._storedRawValue = value;\n            if (this.htmlInputElement) {\n                this.htmlInputElement.value = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InputManager.prototype, \"storedRawValue\", {\n        get: function () {\n            return this._storedRawValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return InputManager;\n}());\nexport { InputManager };\n//# sourceMappingURL=input.manager.js.map","import { InputManager } from \"./input.manager\";\nvar InputService = (function () {\n    function InputService(htmlInputElement, options) {\n        this.htmlInputElement = htmlInputElement;\n        this.options = options;\n        this.PER_AR_NUMBER = new Map();\n        this.inputManager = new InputManager(htmlInputElement);\n        this.initialize();\n    }\n    InputService.prototype.initialize = function () {\n        this.PER_AR_NUMBER.set(\"\\u06F0\", \"0\");\n        this.PER_AR_NUMBER.set(\"\\u06F1\", \"1\");\n        this.PER_AR_NUMBER.set(\"\\u06F2\", \"2\");\n        this.PER_AR_NUMBER.set(\"\\u06F3\", \"3\");\n        this.PER_AR_NUMBER.set(\"\\u06F4\", \"4\");\n        this.PER_AR_NUMBER.set(\"\\u06F5\", \"5\");\n        this.PER_AR_NUMBER.set(\"\\u06F6\", \"6\");\n        this.PER_AR_NUMBER.set(\"\\u06F7\", \"7\");\n        this.PER_AR_NUMBER.set(\"\\u06F8\", \"8\");\n        this.PER_AR_NUMBER.set(\"\\u06F9\", \"9\");\n        this.PER_AR_NUMBER.set(\"\\u0660\", \"0\");\n        this.PER_AR_NUMBER.set(\"\\u0661\", \"1\");\n        this.PER_AR_NUMBER.set(\"\\u0662\", \"2\");\n        this.PER_AR_NUMBER.set(\"\\u0663\", \"3\");\n        this.PER_AR_NUMBER.set(\"\\u0664\", \"4\");\n        this.PER_AR_NUMBER.set(\"\\u0665\", \"5\");\n        this.PER_AR_NUMBER.set(\"\\u0666\", \"6\");\n        this.PER_AR_NUMBER.set(\"\\u0667\", \"7\");\n        this.PER_AR_NUMBER.set(\"\\u0668\", \"8\");\n        this.PER_AR_NUMBER.set(\"\\u0669\", \"9\");\n    };\n    InputService.prototype.addNumber = function (keyCode) {\n        if (!this.rawValue) {\n            this.rawValue = this.applyMask(false, \"0\");\n        }\n        var keyChar = String.fromCharCode(keyCode);\n        var selectionStart = this.inputSelection.selectionStart;\n        var selectionEnd = this.inputSelection.selectionEnd;\n        this.rawValue = this.rawValue.substring(0, selectionStart) + keyChar + this.rawValue.substring(selectionEnd, this.rawValue.length);\n        this.updateFieldValue(selectionStart + 1);\n    };\n    InputService.prototype.applyMask = function (isNumber, rawValue) {\n        var _a = this.options, allowNegative = _a.allowNegative, decimal = _a.decimal, precision = _a.precision, prefix = _a.prefix, suffix = _a.suffix, thousands = _a.thousands, nullable = _a.nullable;\n        rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;\n        var onlyNumbers = rawValue.replace(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/g, \"\");\n        if (!onlyNumbers) {\n            return \"\";\n        }\n        var integerPart = onlyNumbers.slice(0, onlyNumbers.length - precision)\n            .replace(/^\\u0660*/g, \"\")\n            .replace(/^\\u06F0*/g, \"\")\n            .replace(/^0*/g, \"\")\n            .replace(/\\B(?=([0-9\\u0660-\\u0669\\u06F0-\\u06F9]{3})+(?![0-9\\u0660-\\u0669\\u06F0-\\u06F9]))/g, thousands);\n        if (integerPart.startsWith(thousands)) {\n            integerPart = integerPart.substring(1);\n        }\n        if (integerPart == \"\") {\n            integerPart = \"0\";\n        }\n        var newRawValue = integerPart;\n        var decimalPart = onlyNumbers.slice(onlyNumbers.length - precision);\n        if (precision > 0) {\n            newRawValue += decimal + decimalPart;\n        }\n        var isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == \"\");\n        var operator = (rawValue.indexOf(\"-\") > -1 && allowNegative && !isZero) ? \"-\" : \"\";\n        return operator + prefix + newRawValue + suffix;\n    };\n    InputService.prototype.clearMask = function (rawValue) {\n        if (this.isNullable() && rawValue === \"\")\n            return null;\n        var value = (rawValue || \"0\").replace(this.options.prefix, \"\").replace(this.options.suffix, \"\");\n        if (this.options.thousands) {\n            value = value.replace(new RegExp(\"\\\\\" + this.options.thousands, \"g\"), \"\");\n        }\n        if (this.options.decimal) {\n            value = value.replace(this.options.decimal, \".\");\n        }\n        this.PER_AR_NUMBER.forEach(function (val, key) {\n            var re = new RegExp(key, \"g\");\n            value = value.replace(re, val);\n        });\n        return parseFloat(value);\n    };\n    InputService.prototype.changeToNegative = function () {\n        if (this.options.allowNegative && this.rawValue != \"\" && this.rawValue.charAt(0) != \"-\" && this.value != 0) {\n            this.rawValue = \"-\" + this.rawValue;\n        }\n    };\n    InputService.prototype.changeToPositive = function () {\n        this.rawValue = this.rawValue.replace(\"-\", \"\");\n    };\n    InputService.prototype.removeNumber = function (keyCode) {\n        if (this.isNullable() && this.value == 0) {\n            this.rawValue = null;\n            return;\n        }\n        var selectionEnd = this.inputSelection.selectionEnd;\n        var selectionStart = this.inputSelection.selectionStart;\n        if (selectionStart > this.rawValue.length - this.options.suffix.length) {\n            selectionEnd = this.rawValue.length - this.options.suffix.length;\n            selectionStart = this.rawValue.length - this.options.suffix.length;\n        }\n        var move = this.rawValue.substr(selectionStart - 1, 1).match(/\\d/) ? 0 : -1;\n        if ((keyCode == 8 &&\n            selectionStart - 1 === 0 &&\n            !(this.rawValue.substr(selectionStart, 1).match(/\\d/))) ||\n            ((keyCode == 46 || keyCode == 63272) &&\n                selectionStart === 0 &&\n                !(this.rawValue.substr(selectionStart + 1, 1).match(/\\d/)))) {\n            move = 1;\n        }\n        ;\n        selectionEnd = keyCode == 46 || keyCode == 63272 ? selectionEnd + 1 : selectionEnd;\n        selectionStart = keyCode == 8 ? selectionStart - 1 : selectionStart;\n        this.rawValue = this.rawValue.substring(0, selectionStart) + this.rawValue.substring(selectionEnd, this.rawValue.length);\n        this.updateFieldValue(selectionStart + move);\n    };\n    InputService.prototype.updateFieldValue = function (selectionStart) {\n        var newRawValue = this.applyMask(false, this.rawValue || \"\");\n        selectionStart = selectionStart == undefined ? this.rawValue.length : selectionStart;\n        this.inputManager.updateValueAndCursor(newRawValue, this.rawValue.length, selectionStart);\n    };\n    InputService.prototype.updateOptions = function (options) {\n        var value = this.value;\n        this.options = options;\n        this.value = value;\n    };\n    InputService.prototype.prefixLength = function () {\n        return this.options.prefix.length;\n    };\n    InputService.prototype.isNullable = function () {\n        return this.options.nullable;\n    };\n    Object.defineProperty(InputService.prototype, \"canInputMoreNumbers\", {\n        get: function () {\n            return this.inputManager.canInputMoreNumbers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InputService.prototype, \"inputSelection\", {\n        get: function () {\n            return this.inputManager.inputSelection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InputService.prototype, \"rawValue\", {\n        get: function () {\n            return this.inputManager.rawValue;\n        },\n        set: function (value) {\n            this.inputManager.rawValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InputService.prototype, \"storedRawValue\", {\n        get: function () {\n            return this.inputManager.storedRawValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InputService.prototype, \"value\", {\n        get: function () {\n            return this.clearMask(this.rawValue);\n        },\n        set: function (value) {\n            this.rawValue = this.applyMask(true, \"\" + value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return InputService;\n}());\nexport { InputService };\n//# sourceMappingURL=input.service.js.map","import { Pipe, Injectable, NgModule } from '@angular/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar FilterPipe = /** @class */ (function () {\n    function FilterPipe() {\n    }\n    /**\n     * @param {?} value\n     * @param {?} key\n     * @return {?}\n     */\n    FilterPipe.isFoundOnWalking = function (value, key) {\n        var /** @type {?} */ walker = value;\n        var /** @type {?} */ found = false;\n        do {\n            if (walker.hasOwnProperty(key) || Object.getOwnPropertyDescriptor(walker, key)) {\n                found = true;\n                break;\n            }\n        } while (walker = Object.getPrototypeOf(walker));\n        return found;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    FilterPipe.isNumber = function (value) {\n        return !isNaN(parseInt(value, 10)) && isFinite(value);\n    };\n    /**\n     * Checks function's value if type is function otherwise same value\n     * @param {?} value\n     * @return {?}\n     */\n    FilterPipe.getValue = function (value) {\n        return typeof value === 'function' ? value() : value;\n    };\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    FilterPipe.prototype.filterByString = function (filter) {\n        if (filter) {\n            filter = filter.toLowerCase();\n        }\n        return function (value) { return !filter || (value ? ('' + value).toLowerCase().indexOf(filter) !== -1 : false); };\n    };\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    FilterPipe.prototype.filterByBoolean = function (filter) {\n        return function (value) { return Boolean(value) === filter; };\n    };\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    FilterPipe.prototype.filterByObject = function (filter) {\n        var _this = this;\n        return function (value) {\n            for (var /** @type {?} */ key in filter) {\n                if (key === '$or') {\n                    if (!_this.filterByOr(filter.$or)(FilterPipe.getValue(value))) {\n                        return false;\n                    }\n                    continue;\n                }\n                if (!value || !FilterPipe.isFoundOnWalking(value, key)) {\n                    return false;\n                }\n                if (!_this.isMatching(filter[key], FilterPipe.getValue(value[key]))) {\n                    return false;\n                }\n            }\n            return true;\n        };\n    };\n    /**\n     * @param {?} filter\n     * @param {?} val\n     * @return {?}\n     */\n    FilterPipe.prototype.isMatching = function (filter, val) {\n        switch (typeof filter) {\n            case 'boolean':\n                return this.filterByBoolean(filter)(val);\n            case 'string':\n                return this.filterByString(filter)(val);\n            case 'object':\n                return this.filterByObject(filter)(val);\n        }\n        return this.filterDefault(filter)(val);\n    };\n    /**\n     * Filter value by $or\n     * @param {?} filter\n     * @return {?}\n     */\n    FilterPipe.prototype.filterByOr = function (filter) {\n        var _this = this;\n        return function (value) {\n            var /** @type {?} */ length = filter.length;\n            var /** @type {?} */ arrayComparison = function (i) { return value.indexOf(filter[i]) !== -1; };\n            var /** @type {?} */ otherComparison = function (i) { return _this.isMatching(filter[i], value); };\n            var /** @type {?} */ comparison = Array.isArray(value) ? arrayComparison : otherComparison;\n            for (var /** @type {?} */ i = 0; i < length; i++) {\n                if (comparison(i)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    };\n    /**\n     * Default filterDefault function\n     * @param {?} filter\n     * @return {?}\n     */\n    FilterPipe.prototype.filterDefault = function (filter) {\n        return function (value) { return filter === undefined || filter == value; };\n    };\n    /**\n     * @param {?} array\n     * @param {?} filter\n     * @return {?}\n     */\n    FilterPipe.prototype.transform = function (array, filter) {\n        if (!array) {\n            return array;\n        }\n        switch (typeof filter) {\n            case 'boolean':\n                return array.filter(this.filterByBoolean(filter));\n            case 'string':\n                if (FilterPipe.isNumber(filter)) {\n                    return array.filter(this.filterDefault(filter));\n                }\n                return array.filter(this.filterByString(filter));\n            case 'object':\n                return array.filter(this.filterByObject(filter));\n            case 'function':\n                return array.filter(filter);\n        }\n        return array.filter(this.filterDefault(filter));\n    };\n    return FilterPipe;\n}());\nFilterPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'filterBy',\n                pure: false\n            },] },\n    { type: Injectable },\n];\n/** @nocollapse */\nFilterPipe.ctorParameters = function () { return []; };\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar FilterPipeModule = /** @class */ (function () {\n    function FilterPipeModule() {\n    }\n    return FilterPipeModule;\n}());\nFilterPipeModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [FilterPipe],\n                providers: [FilterPipe],\n                exports: [FilterPipe]\n            },] },\n];\n/** @nocollapse */\nFilterPipeModule.ctorParameters = function () { return []; };\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { FilterPipeModule, FilterPipe };\n//# sourceMappingURL=ngx-filter-pipe.js.map\n","/**\n * @license ngx-tabset\n * MIT license\n */\n\nimport { Component, ContentChild, ContentChildren, EventEmitter, Input, NgModule, Output, TemplateRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar TabComponent = (function () {\n    function TabComponent() {\n        this.active = false;\n        this.disabled = false;\n        this.bypassDOM = false;\n        this.customPaneClass = '';\n    }\n    TabComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngx-tab',\n                    template: \"\\n    <div *ngIf=\\\"active\\\"\\n         class=\\\"pane\\\"\\n         [ngClass]=\\\"customPaneClass\\\">\\n      <div *ngIf=\\\"bypassDOM\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"template\\\"></ng-container>\\n      </div>\\n      <div *ngIf=\\\"!bypassDOM\\\">\\n        <ng-content></ng-content>\\n      </div>\\n    </div>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    TabComponent.ctorParameters = function () { return []; };\n    TabComponent.propDecorators = {\n        \"tabTitle\": [{ type: Input },],\n        \"active\": [{ type: Input },],\n        \"disabled\": [{ type: Input },],\n        \"bypassDOM\": [{ type: Input },],\n        \"customPaneClass\": [{ type: Input },],\n        \"template\": [{ type: ContentChild, args: [TemplateRef,] },],\n    };\n    return TabComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar TabsetComponent = (function () {\n    function TabsetComponent() {\n        this.disableStyle = false;\n        this.customNavClass = '';\n        this.customTabsClass = '';\n        this.onSelect = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    TabsetComponent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        // get all active tabs\n        var /** @type {?} */ activeTabs = this.tabs.filter(function (tab) { return tab.active; });\n        // if there is no active tab set, activate the first\n        if (activeTabs.length === 0) {\n            this.selectTab(this.tabs.first);\n        }\n    };\n    /**\n     * @param {?} tabToSelect\n     * @return {?}\n     */\n    TabsetComponent.prototype.selectTab = /**\n     * @param {?} tabToSelect\n     * @return {?}\n     */\n    function (tabToSelect) {\n        if (tabToSelect.disabled === true || tabToSelect.active === true) {\n            return;\n        }\n        // deactivate all tabs\n        this.tabs.toArray().forEach(function (tab) { return tab.active = false; });\n        // activate the tab the user has clicked on.\n        tabToSelect.active = true;\n        this.onSelect.emit(this.tabs.toArray().indexOf(tabToSelect));\n    };\n    TabsetComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngx-tabset',\n                    template: \"\\n    <ul class=\\\"nav-tabset\\\"\\n        [class.disable-style]=\\\"disableStyle\\\"\\n        [ngClass]=\\\"customNavClass\\\">\\n      <li *ngFor=\\\"let tab of tabs\\\"\\n          (click)=\\\"selectTab(tab)\\\"\\n          class=\\\"nav-tab\\\"\\n          [class.active]=\\\"tab.active\\\"\\n          [class.disabled]=\\\"tab.disabled\\\">\\n        <span>{{ tab.tabTitle }}</span>\\n      </li>\\n    </ul>\\n    <div class=\\\"tabs-container\\\"\\n         [ngClass]=\\\"customTabsClass\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    TabsetComponent.ctorParameters = function () { return []; };\n    TabsetComponent.propDecorators = {\n        \"tabs\": [{ type: ContentChildren, args: [TabComponent,] },],\n        \"disableStyle\": [{ type: Input },],\n        \"customNavClass\": [{ type: Input },],\n        \"customTabsClass\": [{ type: Input },],\n        \"onSelect\": [{ type: Output },],\n    };\n    return TabsetComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar TabsModule = (function () {\n    function TabsModule() {\n    }\n    /**\n     * Use in AppModule: new instance of NgxTabset.\n     * @return {?}\n     */\n    TabsModule.forRoot = /**\n     * Use in AppModule: new instance of NgxTabset.\n     * @return {?}\n     */\n    function () {\n        return {\n            ngModule: TabsModule,\n            providers: []\n        };\n    };\n    /**\n     * Use in features modules with lazy loading: new instance of NgxTabset.\n     * @return {?}\n     */\n    TabsModule.forChild = /**\n     * Use in features modules with lazy loading: new instance of NgxTabset.\n     * @return {?}\n     */\n    function () {\n        return {\n            ngModule: TabsModule,\n            providers: []\n        };\n    };\n    TabsModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        TabComponent,\n                        TabsetComponent,\n                    ],\n                    exports: [\n                        TabComponent,\n                        TabsetComponent,\n                    ],\n                    imports: [CommonModule]\n                },] },\n    ];\n    /** @nocollapse */\n    TabsModule.ctorParameters = function () { return []; };\n    return TabsModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n// Public classes.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Entry point for all public APIs of the package.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TabsetComponent, TabComponent, TabsModule };\n//# sourceMappingURL=ngx-tabset.js.map\n"],"sourceRoot":""}