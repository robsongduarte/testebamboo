{"version":3,"sources":["webpack:///./src/app/routes/designacoes/designacoes.module.ts","webpack:///./src/app/routes/designacoes/formulariosPermissao/formularios.permissao.component.html","webpack:///./src/app/routes/designacoes/formulariosPermissao/formularios.permissao.component.scss","webpack:///./src/app/routes/designacoes/formulariosPermissao/formularios.permissao.component.ts"],"names":[],"mappings":"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","file":"designacoes-designacoes-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AgGridModule } from 'ag-grid-angular/main';\r\nimport { NgxSelectModule } from 'ngx-select-ex'\r\nimport { FormulariosPermissaoComponent } from './formulariosPermissao/formularios.permissao.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\nimport { AuthGuardService } from '../../guards/auth-guard.service';\r\n\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'formulariosPermissao', component: FormulariosPermissaoComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild(routes),\r\n    NgxSelectModule,\r\n    AgGridModule,\r\n    NgxSpinnerModule,\r\n    NgxPaginationModule\r\n  ],\r\n  declarations: [\r\n    FormulariosPermissaoComponent,\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class DesignacoesModule { }\r\n","module.exports = \"<div class=\\\"content-heading\\\">\\r\\n  <div>Lista de Designações\\r\\n  </div>\\r\\n</div>\\r\\n<!-- START card-->\\r\\n<section>\\r\\n  <div class=\\\"card border-dark radius-top-only mb-0\\\">\\r\\n    <div class=\\\"card-header bg-dark text-white radius-top-only\\\">\\r\\n      <h5 class=\\\"mb-0 pb-1 pt-1\\\">\\r\\n        Filtros\\r\\n      </h5>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card rounded-0 border-grey\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <form [formGroup]=\\\"formPermissao\\\" class=\\\"form-horizontal\\\" method=\\\"get\\\" action=\\\"/\\\">\\r\\n\\r\\n        <fieldset>\\r\\n          <!--Spinner-->\\r\\n          <ngx-spinner\\r\\n                      bdColor = \\\"rgba(245,238,238,0.8)\\\"\\r\\n                      size = \\\"default\\\"\\r\\n                      color = \\\"#00f2f2\\\"\\r\\n                      type = \\\"ball-clip-rotate\\\"\\r\\n                      >\\r\\n          </ngx-spinner>\\r\\n          <!--Designado-->\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <label class=\\\"col-form-label text-left\\\">Designado</label>\\r\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" autofocus=\\\"autofocus\\\" maxlength=\\\"100\\\" formControlName=\\\"designado\\\"/>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!--Empresa-->\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <label class=\\\"col-form-label text-left\\\">Empresa</label>\\r\\n                <ngx-select [allowClear]=\\\"true\\\"\\r\\n                            [(items)]=\\\"empresas\\\"\\r\\n                            [disabled]=\\\"false\\\"\\r\\n                            [(ngModel)]=\\\"ngxValue\\\"\\r\\n                            [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                            optionValueField=\\\"cdEmpresa\\\" optionTextField=\\\"nmEmpresa\\\"\\r\\n                            (select)=\\\"carregarNivel()\\\"\\r\\n                            (remove)=\\\"removerEmpresa()\\\"\\r\\n                            (keyup)=\\\"onKeyUp($event)\\\"\\r\\n                            placeholder=\\\"Digite o nome da empresa\\\">\\r\\n                </ngx-select>\\r\\n                <ng-template ngx-select-option-not-found>\\r\\n                  Empresa não encontrada!\\r\\n                </ng-template>\\r\\n                <input type=\\\"hidden\\\" formControlName=\\\"empresa\\\" name=\\\"empresa\\\" [(ngModel)]=\\\"ngxValue\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <!--Nivel-->\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <label class=\\\"col-form-label text-left\\\">Nível</label>\\r\\n                <ngx-select [allowClear]=\\\"true\\\"\\r\\n                            [(items)]=\\\"niveis\\\"\\r\\n                            [disabled]=\\\"habilitarNivel\\\"\\r\\n                            [(ngModel)]=\\\"ngxValueNivel\\\"\\r\\n                            [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                            optionValueField=\\\"cdNivel\\\" optionTextField=\\\"nmAbreviatura\\\"\\r\\n                            (remove)=\\\"removerNivel()\\\"\\r\\n                            placeholder=\\\"Nenhum nível selecionado\\\">\\r\\n                            <ng-template ngx-select-option ngx-select-option-selected let-option let-text=\\\"text\\\">\\r\\n                              {{option.data.nmAbreviatura}} - {{option.data.nmNivel}}\\r\\n                            </ng-template>\\r\\n                </ngx-select>\\r\\n                <input type=\\\"hidden\\\" formControlName=\\\"nivel\\\" name=\\\"nivel\\\" [(ngModel)]=\\\"ngxValueNivel\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <!--Data Vigencia-->\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <label class=\\\"col-form-label text-left\\\">Vigência Inicial</label>\\r\\n              <input class=\\\"form-control\\\" type=\\\"date\\\" (change)=\\\"carregarDatainicioVigencia()\\\" formControlName=\\\"inicioVigencia\\\" [formControl]=\\\"formPermissao.controls['inicioVigencia']\\\"/>\\r\\n              <span\\r\\n                class=\\\"text-danger\\\"\\r\\n                *ngIf=\\\"formPermissao.controls['inicioVigencia'].hasError('dateValidator') && (formPermissao.controls['inicioVigencia'].dirty || formPermissao.controls['inicioVigencia'].touched)\\\">\\r\\n                Digite uma data válida.\\r\\n              </span>\\r\\n              <span\\r\\n                class=\\\"text-danger\\\"\\r\\n                *ngIf=\\\"formPermissao.controls['inicioVigencia'].hasError('dataInvalida') && (formPermissao.controls['inicioVigencia'].dirty || formPermissao.controls['inicioVigencia'].touched)\\\">\\r\\n                Data deve ser maior ou igual a 01/01/2000.\\r\\n              </span>\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n              <label class=\\\"col-form-label text-right\\\">Até</label>\\r\\n              <input class=\\\"form-control\\\" type=\\\"date\\\" [min]=\\\"dataMinima\\\" (change)=\\\"carregarDataFimVigencia()\\\" formControlName=\\\"finalVigencia\\\" [formControl]=\\\"formPermissao.controls['finalVigencia']\\\"/>\\r\\n              <span\\r\\n                class=\\\"text-danger\\\"\\r\\n                *ngIf=\\\"formPermissao.controls['finalVigencia'].hasError('dateValidator') && (formPermissao.controls['finalVigencia'].dirty || formPermissao.controls['finalVigencia'].touched)\\\">\\r\\n                Digite uma data válida.\\r\\n              </span>\\r\\n              <span\\r\\n                class=\\\"text-danger\\\"\\r\\n                *ngIf=\\\"formPermissao.controls['finalVigencia'].hasError('dataInvalida') && (formPermissao.controls['finalVigencia'].dirty || formPermissao.controls['finalVigencia'].touched)\\\">\\r\\n                Data deve ser maior ou igual a 01/01/2000.\\r\\n              </span>\\r\\n              <span\\r\\n                class=\\\"text-danger\\\"\\r\\n                *ngIf=\\\"formPermissao.hasError('dataInicioMaior') && !formPermissao.controls['finalVigencia'].hasError('dataInvalida')\\\">\\r\\n                Data fim menor que a data de início.\\r\\n              </span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </fieldset>\\r\\n        <!--Botões-->\\r\\n        <fieldset>\\r\\n          <div class=\\\"panel-footer text-right\\\">\\r\\n              <button style=\\\"margin: 0 5px;\\\" type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"limpar()\\\">Limpar</button>\\r\\n              <button style=\\\"margin: 0 5px;\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"pesquisar()\\\" [disabled]=\\\"formPermissao.invalid\\\">Pesquisar</button>\\r\\n          </div>\\r\\n        </fieldset>\\r\\n      </form>\\r\\n\\r\\n      <div class=\\\"card border-dark radius-top-only mb-0\\\">\\r\\n        <div class=\\\"card-header bg-dark text-white radius-top-only\\\">\\r\\n          <h5 class=\\\"mb-0 pb-1 pt-1\\\">\\r\\n            <i class=\\\"fa fa-table\\\"></i>\\r\\n            Lista de formulários de permissões\\r\\n          </h5>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!--Tabela de retorno designado-->\\r\\n      <div class=\\\"card rounded-0 border-grey\\\">\\r\\n        <table class=\\\"table table-bordered\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\" *ngFor=\\\"let head of headElements; let i = index\\\">\\r\\n                {{head}}\\r\\n              </th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody *ngFor=\\\"let j = index; let designado of designados | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\r\\n            <tr (click)=\\\"abrirNiveis(j)\\\" [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"collapseBasic\\\" class=\\\"clickable\\\">\\r\\n              <td class=\\\"col-md-4\\\">{{designado.nmDesignado}}</td>\\r\\n              <td class=\\\"col-md-5\\\">{{designado.tipoDesignacao == null ? \\\"\\\" : designado.tipoDesignacao.nome}}</td>\\r\\n              <td class=\\\"col-md-3\\\">{{designado.dsTitulo}}</td>\\r\\n              <td>\\r\\n                <div class=\\\"text-right\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm mr-1\\\" (click)=\\\"editar(designado)\\\">\\r\\n                    <i class=\\\"fa fa-eye\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"designado.designacoesNiveis.length>0 && indiceTabela == j && !isCollapsed\\\">\\r\\n              <td colspan=\\\"4\\\" class=\\\"text-center\\\">\\r\\n                <div  display=\\\"table-row\\\" [collapse]=\\\"isCollapsed\\\">\\r\\n                  <table class=\\\"table\\\">\\r\\n                    <thead class=\\\"black white-text\\\">\\r\\n                      <tr>\\r\\n                        <th *ngFor=\\\"let nivel of headNivel; let i = index\\\" scope=\\\"col\\\">\\r\\n                          {{nivel}}\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                      <tbody>\\r\\n                        <tr *ngFor=\\\"let designacoesNiveis of designado.designacoesNiveis\\\">\\r\\n                          <td>{{designacoesNiveis.nivel.nmEmpresa}}</td>\\r\\n                          <td>{{designacoesNiveis.nivel.nmAbreviatura}}</td>\\r\\n                          <td>{{designacoesNiveis.dtVigenciaInicio | date:'dd/MM/yyyy'}}</td>\\r\\n                          <td>{{designacoesNiveis.dtVigenciaFim | date:'dd/MM/yyyy'}}</td>\\r\\n                        </tr>\\r\\n                      </tbody>\\r\\n                  </table>\\r\\n                </div>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <div *ngIf=\\\"designados.length==0\\\">\\r\\n          <div class=\\\"alert alert-light\\\" role=\\\"alert\\\">\\r\\n            Nenhum registro encontrado.\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"mx-auto w-50 text-center\\\" *ngIf=\\\"designados.length > 0\\\">\\r\\n          <pagination-controls previousLabel=\\\"Anterior\\\" (click)=\\\"mudancaPagina()\\\" nextLabel=\\\"Próximo\\\" (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvdXRlcy9kZXNpZ25hY29lcy9mb3JtdWxhcmlvc1Blcm1pc3Nhby9mb3JtdWxhcmlvcy5wZXJtaXNzYW8uY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Empresa } from '../../../model/empresa';\r\nimport { Nivel } from '../../../model/nivel';\r\nimport { Designacao } from '../../../model/designacao';\r\nimport { Designado } from '../../../model/designado';\r\nimport { EmpresaService } from '../../../service/estrutura/empresa.service';\r\nimport { DesignacaoService } from '../../../service/designacoes/designacao.service';\r\nimport { NivelService } from '../../../service/estrutura/nivel.service';\r\nimport { integer } from 'aws-sdk/clients/lightsail';\r\n\r\nimport { DateValidator } from '../../../shared/validators/date.validator';\r\nimport { DateRangeValidator } from '../../../shared/validators/dateRange.validator';\r\n\r\n@Component({\r\n  selector: 'app-formularios-permissao-component',\r\n  templateUrl: './formularios.permissao.component.html',\r\n  styleUrls: ['./formularios.permissao.component.scss']\r\n})\r\nexport class FormulariosPermissaoComponent implements OnInit {\r\n\r\n    model;\r\n    formPermissao: FormGroup;\r\n\r\n    public isCollapsed = true;\r\n    public indiceTabela: number = null;\r\n\r\n    public empresas: Empresa[] = [];\r\n    public niveis: Nivel[] = [];\r\n    public designados: Designacao[] = [];\r\n    public ngxValue: number = 0;\r\n    public ngxValueNivel: number = 0;\r\n    public headElements = ['Designado', 'Tipo de Designação', 'Título', ' '];\r\n    public headNivel = ['Empresa', 'Nivel', 'Início', 'Fim'];\r\n    public firstItemIndex;\r\n    public lastItemIndex;\r\n    public value: string = null;\r\n    public dataMinima: string;\r\n    public p: integer = 1;\r\n\r\n    public dtInicio: Date = new Date();\r\n    public dtFim: Date = new Date();\r\n\r\n    public habilitarNivel: boolean = true;\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private router: Router,\r\n                private empresaService: EmpresaService,\r\n                private designacaoService: DesignacaoService,\r\n                private nivelService: NivelService,\r\n                private spinner: NgxSpinnerService) {\r\n        this.spinner.show();\r\n        this._createForm();\r\n        this.spinner.hide();\r\n    }\r\n\r\n    _createForm() {\r\n      this.formPermissao = this.fb\r\n        .group({\r\n          designado: [null],\r\n          empresa: [0],\r\n          nivel: [0],\r\n          inicioVigencia: [null, Validators.compose([DateValidator.dateValidator, DateValidator.dataInvalida])],\r\n          finalVigencia: [null, Validators.compose([DateValidator.dateValidator, DateValidator.dataInvalida])]\r\n        }, { validator: DateRangeValidator.dataInicioMaior ('inicioVigencia', 'finalVigencia') });\r\n    }\r\n\r\n    public ngOnInit() {\r\n        //this._all();\r\n    }\r\n\r\n    limpar() {\r\n        this._createForm();\r\n        this.ngxValue = 0;\r\n        this.ngxValueNivel = 0;\r\n        this.habilitarNivel = true;\r\n    }\r\n\r\n    carregarNivel() {\r\n        this.habilitarNivel = false;\r\n        this.allByEmpresa();\r\n\r\n        //Array.from(new Set(this.niveis.map((item: any) => item.nmAbreviatura)));\r\n\r\n        this.niveis = this.niveis.filter((obj, pos, arr) => {\r\n            return arr.map(mapObj => mapObj.nmAbreviatura).indexOf(obj.nmAbreviatura) === pos;\r\n        });\r\n    }\r\n\r\n    removerEmpresa() {\r\n        this.empresas = [];\r\n        this.niveis = [];\r\n        this.ngxValue = 0;\r\n        this.habilitarNivel = true;\r\n        this.ngxValueNivel = 0;\r\n    }\r\n\r\n    removerNivel() {\r\n        this.ngxValueNivel = 0;\r\n    }\r\n\r\n    pesquisar () {\r\n        this.spinner.show();\r\n        this.designados = [];\r\n        if (this.formPermissao.value.designado == '') {\r\n            this.formPermissao.value.designado = null;\r\n        }\r\n\r\n        if (this.formPermissao.value.inicioVigencia == '') {\r\n            this.formPermissao.value.inicioVigencia = null;\r\n        }\r\n\r\n        if (this.formPermissao.value.finalVigencia == '') {\r\n            this.formPermissao.value.finalVigencia = null;\r\n        }\r\n\r\n        if (this.formPermissao.value.empresa == null) {\r\n            this.formPermissao.value.empresa = 0;\r\n        }\r\n\r\n        if (this.formPermissao.value.nivel == null) {\r\n            this.formPermissao.value.nivel = 0;\r\n        }\r\n\r\n        this.designacaoService.allaByDesignadoAndEmpresaAndVigencia(this.formPermissao.value.designado,\r\n            this.formPermissao.value.empresa, this.formPermissao.value.nivel, this.formPermissao.value.inicioVigencia,\r\n            this.formPermissao.value.finalVigencia)\r\n        .subscribe(\r\n            (designados : any) => {           \r\n                if (designados != null) {\r\n                    for (let designado of designados) {\r\n                        this.designados.push(designado.designacao);\r\n                    }     \r\n                }                \r\n                this.spinner.hide();   \r\n            },\r\n            error => console.log(error));            \r\n    }\r\n\r\n    editar(editarDesignado : Designado) {\r\n        console.log('teste');\r\n        this.router.navigate(['editar-formularios-permissao', editarDesignado.cdDesignacao]);\r\n    }\r\n\r\n    _all() {\r\n        this.spinner.show();\r\n        this.empresas = [];\r\n        this.empresaService.all()\r\n        .subscribe(\r\n            (empresas : any) => {\r\n                if (empresas != null) {\r\n                    for (let empresa of empresas) {\r\n                        this.empresas.push(empresa.empresa);\r\n                    }\r\n                }\r\n                this.spinner.hide();\r\n            },\r\n            error => console.log(error));\r\n    }\r\n\r\n    allByEmpresa() {\r\n        this.spinner.show();\r\n        this.niveis = [];\r\n        this.nivelService.allByEmpresa(this.ngxValue)\r\n        .subscribe(\r\n            (niveis : any[]) => {\r\n                if (niveis != null) {\r\n                    for (let nivel of niveis) {\r\n                        this.niveis.push(nivel.nivel);\r\n                    }\r\n                }\r\n                this.spinner.hide();\r\n            },\r\n            error => console.log(error));\r\n    }\r\n\r\n    onKeyUp(event): void {\r\n        this.value = event.target.value;\r\n        var promise = new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                if (this.value.length > 0) {\r\n                    this.findByName(this.value);\r\n                } else {\r\n                    this.empresas = [];\r\n                }\r\n            }, 2000);\r\n            });\r\n    }\r\n\r\n    findByName(nmEmpresa: String) {\r\n        this.removerEmpresa();\r\n        this.spinner.show();\r\n        this.empresaService.findByName(nmEmpresa)\r\n        .subscribe(\r\n            (empresas : any) => {\r\n                if (empresas != null) {\r\n                    this.empresas = [];\r\n                    for (let empresa of empresas) {\r\n                        this.empresas.push(empresa.empresa);\r\n                    }\r\n                }\r\n                this.spinner.hide();\r\n            },\r\n            error => console.log(error));\r\n    }\r\n\r\n    carregarDatainicioVigencia() {\r\n        this.dataMinima = this.formPermissao.value.inicioVigencia;\r\n        this.carregarDatas()\r\n    }\r\n\r\n    carregarDataFimVigencia() {\r\n      this.carregarDatas()\r\n    }\r\n\r\n    carregarDatas() {\r\n      this.dtFim = new Date(this.formPermissao.value.finalVigencia);\r\n      this.dtInicio = new Date(this.formPermissao.value.inicioVigencia);\r\n    }\r\n\r\n    abrirNiveis(indice: number) {\r\n        this.isCollapsed = !this.isCollapsed;\r\n        if (this.indiceTabela != null && this.indiceTabela != indice && this.isCollapsed) {\r\n            this.isCollapsed = !this.isCollapsed;\r\n        }\r\n        this.indiceTabela = indice;\r\n    }\r\n\r\n    mudancaPagina() {\r\n        this.isCollapsed = true;\r\n        this.indiceTabela = null;\r\n    }\r\n}\r\n"],"sourceRoot":""}